buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'realm-android'

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.2"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 26

        applicationId "com.taccotap.phahtaigi"
        versionCode 27
        versionName "2.1.0"
    }

    dataBinding {
        enabled = true
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            android.applicationVariants.all { variant ->
                variant.outputs.all { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        project.ext { appName = 'MyAppName' }
                        def formattedDate = new Date().format('yyyyMMdd-HHmmss')
                        def newName = output.outputFile.name
                        newName = newName.replace("app-", "$rootProject.name-")
                        newName = newName.replace("-release", "-release-v" + versionName + "(" + versionCode + ")-" + formattedDate)
                        outputFileName = newName
                    }
                }
            }

            Properties properties = new Properties()
            properties.load(project.rootProject.file('local.properties').newDataInputStream())
            def publicKey = properties.getProperty('publickey')
            buildConfigField "String", "PUBLIC_KEY", publicKey

            buildConfigField "boolean", "DEBUG_LOG", "false"
        }

        debug {
            Properties properties = new Properties()
            properties.load(project.rootProject.file('local.properties').newDataInputStream())
            def publicKey = properties.getProperty('publickey')
            buildConfigField "String", "PUBLIC_KEY", publicKey

            buildConfigField "boolean", "DEBUG_LOG", "true"
        }
    }
}

repositories {
    maven { url "http://dl.bintray.com/pixplicity/maven" }
    maven { url 'https://maven.fabric.io/public' }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(':tailo_realm_model')

    implementation 'com.android.support:support-v4:26.1.0'
    implementation 'com.android.support:appcompat-v7:26.1.0'

    implementation('com.crashlytics.sdk.android:crashlytics:2.6.7@aar') {
        transitive = true;
    }

    // rx
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.0.5'
    implementation 'com.trello.rxlifecycle2:rxlifecycle:2.0.1'
    implementation 'com.trello.rxlifecycle2:rxlifecycle-android:2.0.1'
    implementation 'com.trello.rxlifecycle2:rxlifecycle-components:2.0.1'
    implementation 'com.jakewharton.rxrelay2:rxrelay:2.0.0'

    // Icon
    implementation 'com.mikepenz:iconics-core:2.8.2@aar'
    implementation 'com.mikepenz:community-material-typeface:1.7.22.1@aar'

    // ButterKnife
    implementation 'com.jakewharton:butterknife:8.5.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.5.1'

    // Realm
    // compile 'com.github.eggheadgames:android-realm-asset-helper:2.0.0'
    implementation 'com.github.shiami:android-realm-asset-helper:98202c62dc'

    implementation 'com.pixplicity.easyprefs:library:1.8.1@aar'
    implementation 'com.github.daniel-stoneuk:material-about-library:1.8.2'

    testCompile 'junit:junit:4.12'
}
