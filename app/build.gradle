apply plugin: 'com.android.application'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'
apply plugin: 'realm-android'

android {
    compileSdkVersion 29

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 29

        applicationId "com.taccotap.phahtaigi"
        versionCode 31
        versionName "2.3.0"
    }

    dataBinding {
        enabled = true
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            android.applicationVariants.all { variant ->
                variant.outputs.all { output ->
                    if (variant.getBuildType().getName().endsWith('.apk')) {
                        if (variant.versionName != null) {
                            def baseName = output.baseName.toLowerCase()
                            def formattedDate = new Date().format('yyyyMMdd-HHmmss')
                            String fileName = "${rootProject.name}_${variant.versionName}-${baseName}-${formattedDate}.apk"

                            // this is the line:
                            outputFileName = new File(output.outputFile.parent, fileName).getName()
                        }
                    }
                }
            }

//            android.applicationVariants.all { variant ->
//                variant.outputs.all { output ->
//                    def outputFile = output.outputFile
//                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
//                        project.ext { appName = 'MyAppName' }
//                        def formattedDate = new Date().format('yyyyMMdd-HHmmss')
//                        def newName = output.outputFile.name
//                        newName = newName.replace("app-", "$rootProject.name-")
//                        newName = newName.replace("-release", "-release-v" + versionName + "(" + versionCode + ")-" + formattedDate)
//                        outputFileName = newName
//                    }
//                }
//            }

            Properties properties = new Properties()
            properties.load(project.rootProject.file('local.properties').newDataInputStream())
            def publicKey = properties.getProperty('publickey')
            buildConfigField "String", "PUBLIC_KEY", publicKey

            buildConfigField "boolean", "DEBUG_LOG", "false"
        }

        debug {
            Properties properties = new Properties()
            properties.load(project.rootProject.file('local.properties').newDataInputStream())
            def publicKey = properties.getProperty('publickey')
            buildConfigField "String", "PUBLIC_KEY", publicKey

            buildConfigField "boolean", "DEBUG_LOG", "true"
        }
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    // Butterknife requires Java 8.
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

repositories {
    maven { url "http://dl.bintray.com/pixplicity/maven" }
    maven { url 'https://maven.fabric.io/public' }
    mavenCentral()
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(':tailo_realm_model')
    implementation project(':realm_db_installer')

    implementation 'com.google.firebase:firebase-core:16.0.9'
    implementation('com.crashlytics.sdk.android:crashlytics:2.10.1@aar') {
        transitive = true
    }

//    implementation 'com.android.billingclient:billing:2.0.1'

    // rx
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.9'
    implementation 'com.trello.rxlifecycle3:rxlifecycle:3.0.0'
    implementation 'com.trello.rxlifecycle3:rxlifecycle-android:3.0.0'
    implementation 'com.trello.rxlifecycle3:rxlifecycle-components:3.0.0'
    implementation 'com.jakewharton.rxrelay2:rxrelay:2.1.0'

    // Icon
    implementation 'com.mikepenz:iconics-core:2.8.2@aar'
    implementation 'com.mikepenz:community-material-typeface:1.7.22.1@aar'

    // ButterKnife
    implementation 'com.jakewharton:butterknife:10.1.0'
    kapt 'com.jakewharton:butterknife-compiler:10.1.0'

    implementation 'com.pixplicity.easyprefs:library:1.8.1@aar'
    implementation 'com.github.daniel-stoneuk:material-about-library:1.8.2'

    implementation "androidx.core:core-ktx:1.0.2"

//    testImplementation 'junit:junit:4.12'
}

apply plugin: 'com.google.gms.google-services'